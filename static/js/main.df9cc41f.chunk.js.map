{"version":3,"sources":["assets/images sync /^/.//p.*/.png$","assets/images/p2064.png","assets/images/p4148.png","assets/images/p4246.png","assets/images/p4916.png","assets/images/p8983.png","assets/images/player_background.png","components/player-card/index.js","components/player-select/index.js","App.js","registerServiceWorker.js","index.js"],"names":["map","./p2064.png","./p4148.png","./p4246.png","./p4916.png","./p8983.png","./player_background.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","PlayerCard","props","getStat","player","type","stats","filter","stat","name","includes","value","react_default","a","createElement","className","src","require","alt","currentTeam","title","first","last","F","M","D","G","info","position","toFixed","PlayerSelect","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","players","selectedPlayer","handleChange","updateSelectedPlayer","bind","assertThisInitialized","_fetchPlayers","event","selectedId","parseInt","target","setState","selected","onChange","key","components_player_card","_this2","axios","get","then","response","data","Component","App","components_player_select","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df9cc41f.chunk.js","sourcesContent":["var map = {\n\t\"./p2064.png\": 34,\n\t\"./p4148.png\": 35,\n\t\"./p4246.png\": 36,\n\t\"./p4916.png\": 37,\n\t\"./p8983.png\": 38,\n\t\"./player_background.png\": 39\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","module.exports = __webpack_public_path__ + \"static/media/p2064.4e243d91.png\";","module.exports = __webpack_public_path__ + \"static/media/p4148.8ce994f7.png\";","module.exports = __webpack_public_path__ + \"static/media/p4246.f7bd53c6.png\";","module.exports = __webpack_public_path__ + \"static/media/p4916.078f0b99.png\";","module.exports = __webpack_public_path__ + \"static/media/p8983.ce671d9c.png\";","module.exports = __webpack_public_path__ + \"static/media/player_background.4f1a9748.png\";","import React from 'react';\nimport './player-card.css';\n\nconst PlayerCard = (props) => {\n\n  const getStat = (player, type) => {\n    return player.stats.filter(stat => stat.name.includes(type))[0].value;\n  };\n\n  const getPosition = (position) => {\n    const pos = {\n      F: 'Forward ',\n      M: 'Midfielder',\n      D: 'Defence',\n      G: 'Goalkeeper'\n    }\n\n    return pos[position];\n  };\n\n  return (\n    <div className=\"playerCard\">\n      <div className=\"playerCard__background\">\n        <div className=\"playerCard__playerImage\">\n          <img src={require('../../assets/images/p' + props.player.player.id + '.png')} alt=\"\" id=\"pic\" />\n        </div>\n      </div>\n      <div className={'playerCard__clubBadge playerCard__clubBadge--' + props.player.player.currentTeam.id} id=\"club-badge\" title=\"\" />\n      <div className=\"playerCard__details\">\n        <h2 className=\"playerCard__name\">\n          {props.player.player.name.first} {props.player.player.name.last}\n        </h2>\n        <p className=\"playerCard__position\">\n          {getPosition(props.player.player.info.position)}\n        </p>\n\n        <div className=\"playerCard__stats\">\n          <span className=\"playerCard__statTitle\">Appearances</span>\n          <p className=\"playerCard__statValue\" id=\"appearances\">\n            {getStat(props.player, 'appearances')}\n          </p>\n        </div>\n\n        <div className=\"playerCard__stats\">\n          <span className=\"playerCard__statTitle\">Goals</span>\n          <p className=\"playerCard__statValue\" id=\"goals\">\n            {getStat(props.player, 'goals')}\n          </p>\n        </div>\n\n        <div className=\"playerCard__stats\">\n          <span className=\"playerCard__statTitle\">Assists</span>\n          <p className=\"playerCard__statValue\" id=\"assists\">\n            {getStat(props.player, 'goal_assist')}\n          </p>\n        </div>\n\n        <div className=\"playerCard__stats\">\n          <span className=\"playerCard__statTitle\">Goals per match</span>\n          <p className=\"playerCard__statValue\" id=\"goals-per-match\">\n            {(getStat(props.player, 'goals') / getStat(props.player, 'appearances')).toFixed(2)}\n          </p>\n        </div>\n\n        <div className=\"playerCard__stats\">\n          <span className=\"playerCard__statTitle\">Passes per minute</span>\n          <p className=\"playerCard__statValue\" id=\"passes-per-min\">\n          {((getStat(props.player, 'fwd_pass') + getStat(props.player, 'backward_pass')) / getStat(props.player, 'mins_played')).toFixed(2)}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerCard;\n","import React, { Component } from 'react';\nimport PlayerCard from '../player-card/index';\nimport './player-select.css';\nimport axios from 'axios';\n\nclass PlayerSelect extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      players: [],\n      value: '',\n      selectedPlayer: {}\n    };\n\n    this.handleChange = this.updateSelectedPlayer.bind(this);\n  }\n\n  componentDidMount() {\n    this._fetchPlayers();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  updateSelectedPlayer(event) {\n    const selectedId = parseInt(event.target.value, 10);\n    this.setState({ value: selectedId });\n    const selected = this.state.players.filter(player => player.player.id === selectedId);\n    this.setState({ selectedPlayer: selected[0] });\n  }\n\n  render() {\n    return (\n      <div className=\"playerSelect\">\n        <select\n          value={this.state.value} onChange={this.handleChange}\n          className=\"playerSelect__select\"\n        >\n          {this.state.players.map((player) =>\n            <option key={player.player.id} value={player.player.id}>\n              {player.player.name.first} {player.player.name.last}\n            </option>\n          )}\n        </select>\n        <div className=\"playerSelect__card\">\n        { this.state.selectedPlayer.player &&\n          <PlayerCard player={this.state.selectedPlayer} />\n        }\n        </div>\n      </div>\n    );\n  }\n\n  _fetchPlayers() {\n    axios.get('./data/player-stats.json')\n      .then(response => {\n        const players = response.data.data\n        this.setState({ players });\n        this.setState({ selectedPlayer: this.state.players[0] });\n      })\n  }\n}\n\nexport default PlayerSelect;\n","import React, { Component } from 'react';\n\nimport PlayerSelect from './components/player-select/index';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"playerWidget\">\n        <PlayerSelect />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\nregisterServiceWorker();\n"],"sourceRoot":""}